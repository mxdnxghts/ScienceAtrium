@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Google
@using ScienceAtrium.Presentation.Components.Account.Shared
@using Microsoft.AspNetCore.Components.Authorization

@inherits LayoutComponentBase
@inject SignInManager<ApplicationUser> SignInManager
<body>
	<header id="header" class="header">

		<div class="container">

			<nav class="nav">
				<div class="nav-logo">
					<p>ScienceAtrium</p>
				</div>
				<div class="nav-menu" id="navMenu">
					<ul>
						<li><a href="/" class="link">Главная</a></li>
						<li><a href="account" class="link">Профиль</a></li>
						<li><a href="basket" class="link">Корзина</a></li>
						<li><a href="#catalog" class="link">Каталог</a></li>
					</ul>
				</div>
				<AuthorizeView>
					<Authorized>

					</Authorized>
					<NotAuthorized>
						<div class="nav-button">
							<ExternalLoginPicker />
						</div>
					</NotAuthorized>
				</AuthorizeView>
				
			</nav>

		</div>

	</header>

	<script>

		function myMenuFunction() {
			var i = document.getElementById("navMenu");
			if (i.className === "nav-menu") {
				i.className += " responsive";
			} else {
				i.className = "nav-menu";
			}
		}

		function redirectToAuth(){
			window.location.href = "/auth";
		}

	</script>

    @Body

	<footer id="footer" class="footer">

		<h3 class="align-content-center">ScienceAtrium</h3>

		<a href="mailto:info.scienceatrium@gmail.com" class="mailto">
			<img src="img/envelope.png" width="25" height="25">
			info.scienceatrium@gmail.com
		</a>

	</footer>
</body>

@code{
	IEnumerable<AuthenticationScheme> _externalSchemes;
	protected override async Task OnInitializedAsync()
	{
		_externalSchemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
	}
}